server.port=7080
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.username=admin
spring.data.mongodb.password=admin
spring.data.mongodb.database=hotel_inventory
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.auto-index-creation=true

logging.file.name=hotel-inventory.log

server.error.whitelabel.enabled=false
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
404.error.message=URL given is not present
not.found=Not Found

spring.kafka.bootstrap-servers=localhost:29092
# producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# consumer
spring.kafka.consumer.group-id=hotel

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# json deserializer config
spring.kafka.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.cts.hotel.model.RoomModel

# topic
add_room_topic=add_room
update_room_topic=update_room